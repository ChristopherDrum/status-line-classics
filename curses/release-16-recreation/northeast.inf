
Object  Beside_the_Drive "Beside the Drive"      
  with  name 'wistaria' 'car' 'gravel',
        before [;
            Go:
                if( noun == w_obj or u_obj && self.u_to == Dead_End )
                    print "With your heart in your mouth, you scale the old fire escape once again, breathing a 
                        sigh of relief as you haul yourself in through the open hatchway at the top.^";
                rfalse;
        ],
        n_to "The old carved southern wall of the gardens blocks your way around the edge of the Hall.",
        w_to "The Hall is in the way.",
        ne_to Public_Footpath,
        u_to "The fire escape is perilous and leads nowhere. Doubtless it would be useless in any real fire.",
        description "At the foot of the Hall is the drive, a long gravel lane approaching the house through trees.^^Since your family are intermittently loading suitcases into the car, which only makes you feel guilty, the only safe way to creep away is along the public footpath, to northeast.",
        cant_go "Better not - they might catch you.",
        section T_NE_OF_HOME,
  has   light;

Object  -> fire_escape2 "fire escape"     
  with  name 'fire' 'escape' 'white' 'rope' 'rickety',
        before [; Climb, Enter: << Go u_obj >>; ],
        initial [;
            if( Beside_the_Drive.u_to ~= Dead_End )
                "Wistaria climbs a desperately rickety fire escape up the side of the Hall.";
            "Wistaria climbs a desperately rickety fire escape up the east side of the Hall, and so might you: 
                at the top the fire escape door into the attic is open.";
        ],
        description "For the first couple of storeys, an old iron zig-zag, and after that a ladder that might or might not be well-anchored. The gardeners have done a good job of concealing it behind wistaria which (in any case) looks the stronger of the two.",
  has   static;

Object  Public_Footpath "Public Footpath"        
  with  name 'stile' 'dragonflies' 'house' 'hall' 'battlements',
        n_to Stone_Cross,
        sw_to Beside_the_Drive,
        d_to Hollow,
        description "By a stile in the public footpath across the fields to the village, which lies to the north. Sitting on the stile you have a splendid view of the house and its battlements. The air is ablaze with pollen and dragonflies.^^It might be possible to scramble down to a hollow, but it surely wouldn't be pleasant.",
        cant_go "The footpath turns from southwest to north.",
        section T_NE_OF_HOME,
  has   light;

Object  Hollow "Hollow"  
  with  nw_to Mosaic,
        u_to Public_Footpath,
        description "A low, muddy, stinking hollow, trodden with reeds, dried out in the long summer and no more than moist now. You could climb back up, or go northwest, though that would mean crawling through a thorny hedge.",
        section T_NE_OF_HOME,
  has   light;

Object  -> nest "nest"   
  with  name 'nest',
        initial "There's a bird's nest at the bottom of the hollow.",
  has   static;

Object  -> bunch_of_nuts "bunch of nuts" 
  with  name 'bunch' 'of' 'nuts',
        before [;
            ! Yes, unconditional "before"
            trigger_quotation(41);
            if( corn_crake in Hollow ) "The corn crake won't let you near her nest.";
        ],
        initial "Entwined in the nest is a bunch of nuts.",
        description "A bunch of nuts, left over from last autumn.",
        devil_hint "Nuts to you too.",
        angel_hint "Do you know, I love nuts, but I have to be so careful what I eat now... Still, the little ones will have them.",
  has   edible scored;

Object  -> corn_crake "corn crake"       
  with  name 'corn' 'crake' 'corncrake' 'deaf' 'rail' 'bird',
        life [; Order, Ask, Answer: "The bird seems not to have heard."; ],
        initial "And sat upon it is, as you might expect, a bird: a corn crake, in fact.",
        description "A rail with a distinctive cry. And a possessive look.",
  has   animate;

Object  Stone_Cross "Stone Cross"        
  with  name 'pub' 'goat' 'compasses',
        n_to parish_church,
        s_to Public_Footpath,
        description "Beside the long triangle of the green, under the stone cross of the First World War memorial. The public footpath runs south to a stile. The village is tiny: the parish church, the ~Goat and Compasses~ pub (which, owing to quaint English licensing laws, is closed) and a few houses and desultory tea-shops for tourists visiting Meldrew Hall.",
        cant_go "You wander around the peaceful green for a while, but there's nothing to do.",
        section T_NE_OF_HOME,
  has   light;

[ OldEvansLife ;
    if( action == ##Order or ##Ask ) {
        if( self hasnt general ) {
            "~Just a minute, I'm doing my form.~";
        }
        print "He looks at you in a hypnotic daze,";
        if( action == ##Give && noun == Crescent_Moon && second == player ) {
            move Crescent_Moon to player;
            Achieved(SCORE_HYPNOSIS);
            self.description = "Old Evans' hat is empty. You feel terribly guilty.";
            " and before you can say ~How heartless I am~ he obediently hands you the Moon.";
        }
        " unable to follow your perfectly clear instruction.";
    }
    if( action == ##Answer ) {
        "Evans is lost. Whatever do you mean?";
    }
    if( action == ##Give ) {
        if( noun == Crescent_Moon ) {
            "Evans looks sadly at the mascot. But it is tarnished now, you have spoilt it. Your guilt increases further.";
        }
        rfalse;
    }
    rfalse;
];

Object  -> Old_Evans "Old Evans" 
  with  name 'racing' 'enthusiast' 'old' 'evans',
        life OldEvansLife,
        orders [;
            print "He looks at you in a hypnotic daze,";
            Give:
                if( noun == Crescent_Moon && second == player ) {
                    move Crescent_Moon to player;
                    Achieved(SCORE_HYPNOSIS);
                    self.description = "Old Evans' hat is empty. You feel terribly guilty.";
                    " and before you can say ~How heartless I am~ he obediently hands you the Moon.";
                }
            " unable to follow your perfectly clear instruction.";
        ],
        initial "Old Evans, the village racing enthusiast, sits on the steps of the memorial, combing the back pages of his ~Racing Times~ newspaper.",
        description "In the band of his hat is his lucky mascot: a little picture of the crescent moon.",
  has   animate proper transparent;

TarotCard -> -> Crescent_Moon "Crescent Moon"      
  with  name 'crescent' 'moon' 'mascot' 'lucky',
        before  [;
            Take, Remove:
                if( self in Old_Evans )
                    "Evans isn't giving up his mascot that easily.";
                rfalse;
        ],
        door_to Parish_Church_Room,
        description "Some kind of crescent moon, an old Druidical symbol.",
        devil_hint "It leads nowhere.";

Object  -> -> Racing_Times "Racing Times"        
  with  name 'paper' 'newspaper' 'racing' 'times',
        before [;
            Take, Remove: "Evans isn't giving up his paper.";
        ],
        description "The front page story (~Lord Lucan's new acquisition Shergar comes out of retirement to win 
            the Grand National~) is so boringly unsensational that you quickly lose interest. But Evans is eternally
            fascinated with minute details of the form of the horses, tomorrow's race meetings, current odds quoted
            by the bookmakers, and so on.",
  has   ;

Object  -> -> hat_band "hat band"        
  with  name 'hat' 'band',
        before [;
            Take, Remove: "Evans isn't giving up his hat-band.";
        ],
        description "Racing aficionados consider it lucky to wear mascots in the bands of their hats.",
  has   ;

Object  -> war_memorial "war memorial"   
  with  name 'war' 'memorial' 'cross' 'green' 'stone' 'fallen',
        description "The stone cross, for the fallen of the Great War of 1914-18, contains more names than there are houses in the village.^^Your eye is caught by Second Lieutenant Gerard Meldrew of the 19th/21st Rifles, and you shiver, although the afternoon is warm.",
  has   scenery;

Object  -> parish_church "parish church" 
  with  name 'parish' 'church' 'door',
        before [; 
            Enter:
                if( self hasnt open )
                    "The Church door is barred from the far side.";
                rfalse;
        ],
        door_to Parish_Church_Room,
        door_dir n_to,
        when_closed "The fourteenth-century Church of St Michael and All Angels doesn't seem to be locked up, exactly - just barred from the other side.",
  has   door scenery;

Object  -> Goat_and_Compasses "Goat and Compasses"       
  with  name 'pub' 'goat' 'compasses' 'public' 'house' 'bar',
        before [; Enter: "The pub is closed, licensing laws being what they are."; ],
        door_dir w_to,
        description "In the days of Oliver Cromwell, it was called ~God Encompasseth~, but the locals have worn 
            down the name over the centuries to ~Goat and Compasses~. It is of course closed, owing to the licensing
            laws. You congratulate yourself on living in such a modern, forward-looking country.",
  has   door locked proper scenery;

Object  pet_monkey "pet monkey"  
  with  name 'pet' 'monkey',
        before [;
            Touch: "You stroke the monkey's pelt. It jumps about, cheeping.";
            Kiss: "Evans rather resents this importunate advance.";
        ],
        initial "The monkey sits on Evans' shoulder, cheeping with excitement. Evans has found a pet, and is so 
            gruffly delighted that he has forgotten all about the mascot you stole. Now if he could only predict
            the 3.40 at Borchester Mills...",
  has   animate;

Object  Parish_Church_Room "Parish Church"    
  with  name 'flowers' 'pews' 'woven' 'mattings' 'lectern' 'altar',
        s_to [;
            if (parish_church hasnt open) {
                give parish_church open;
                parish_church.description = "The church door is open.";
                print "You unbar the door, and let yourself out.^";
            }
            return Stone_Cross;
        ],
        e_to East_Side_Chapel,
        w_to West_Side_Chapel,
        u_to Bell_Tower,
        d_to [;
            if( Moonstone has open ) 
                "To your horror your body partly thins to mist as you climb down through the threshold!  Alarmed, 
                 you pull back. The underworld beneath the Moonstone, it seems, is not for mortals.";
            "The Moonstone is huge and solid.";
        ],
        description "Before this was the Norman church of St Michael and All Angels, it was a Saxon one: this is 
            an ancient site. A great space of stone, filled with dark wooden pews and woven mattings. Flowers left
            over from Sunday grace the lectern and altar. A narrow stair leads upward, and the village green lies
            to the south.^^Old side chapels lie east and west.",
        section T_NE_OF_HOME,
  has   light;

Object  -> Moonstone "Moonstone" 
  with  name 'moonstone' 'moon' 'stone' 'door' 'flagstone' 'iron' 'rings' 'old',
        before [;
            Examine: trigger_quotation(47); rfalse;
            Open, Push, Pull, Take:
                trigger_quotation(19);
                "Legend has it nothing holds down the stone, but if so it's far too heavy to budge.";
            PointAt, Knock:
                if( adamantine_knight in location ) 
                    "The knight comes a little closer, cupping one ear to pantomime listening. He does seem 
                     to have partial hearing.";
        ],
        when_closed "Set into the floor, and slightly raised, is the Moonstone, an ancient broad flagstone the size of a door, inscribed with a crescent moon.",
        door_dir d_to,
        when_open "A passage slants down through a solid crystal doorway in the Moonstone.",
        description "The Moonstone is very old, probably pre-dating the rest of the church by some centuries. 
            Legends about it abound: some say the spirits of the departed pass beneath. Old iron rings are set in
            it, but nobody has ever succeeded in lifting the colossal weight.",
        article "the",
  has   door static;

Object  West_Side_Chapel "West Side Chapel"      
  with  name 'stained' 'glass' 'windows' 'resurrect',
        before [;
            Repair, Insert, PutOn:
                if( second ~= adamantine_statue ) rfalse;
                if( noun ~= adamantine_hand or adamantine_skull or adamantine_heart )   
                    "That seems incongruous.";
                if( noun == adamantine_hand ) {
                    move adamantine_hand to West_Side_Chapel;
                    give adamantine_hand concealed;
                    LeftHand = 2;
                    "The hand fits rather loosely onto the left ~wrist~ of the adamantine knight.";
                }
                if( noun == adamantine_skull ) {
                    move adamantine_skull to West_Side_Chapel;
                    give adamantine_skull concealed;
                    SkullFit = 2;
                    "The skull fits very loosely onto the ~neck~ of the adamantine knight.";
                }
                if( noun == adamantine_heart ) {
                    remove adamantine_heart;
                    give adamantine_heart general;
                    "The heart sits well in the so-empty ribcage of the adamantine knight.";
                }
                rfalse;
            Turn:
                if( noun == adamantine_skull or adamantine_hand && noun has concealed ) {
                    if( noun == adamantine_hand ) {
                        remove adamantine_hand;
                        LeftHand = 0;
                        give adamantine_hand general;
                        give adamantine_hand ~concealed;
                        "The hand screws tightly onto the adamantine knight.";
                    }
                    if( noun == adamantine_skull ) {
                        remove adamantine_skull;
                        SkullFit = 0;
                        give adamantine_skull general;
                        give adamantine_skull ~concealed;
                        "The skull screws tightly onto the adamantine knight.";
                    }
                }
                rfalse;
        ],

        after [;
            Look:
                if( adamantine_statue in West_Side_Chapel ) DisplayKnight();
                rfalse;
        ],
        e_to Parish_Church_Room,
        description "An alcove in the ancient west side of the church, beneath stained glass windows of the Resurrection.",
        cant_go "The church lies east.",
        each_turn [;
            if( SkullFit > 0 ) {
                --SkullFit;
                if( SkullFit == 0 ) {
                    give adamantine_skull ~concealed;
                    "^The skull wobbles and falls off the knight again.";
                }
            }
            if( LeftHand > 0 ) {
                --LeftHand;
                if( LeftHand == 0 ) {
                    give adamantine_hand ~concealed;
                    "^The hand wavers and falls off the knight again.";
                }
            }
        ],
        section T_NE_OF_HOME,
  has   light;


[ DisplayKnight ;
    if( adamantine_skull hasnt general && adamantine_skull hasnt concealed ) 
        print "^A headless ";
    else 
        print "^An ";
    print "adamantine statue lies prone here, a knight on a tomb";
    if( adamantine_hand hasnt general && adamantine_heart hasnt general ) 
        ".";
    if( adamantine_hand has general || adamantine_hand has concealed ) 
        print " with hand outstretched";
    if( adamantine_heart has general ) 
        ", a heart in his ribcage. And yet there is no spark of life in him.";
    ", heartless and implacable.";
];

Object  -> adamantine_statue "adamantine statue" 
  with  name 'adamantine' 'statue' 'adamant' 'knight',
        description "The statue is half-skeleton, and you can see clear through the bones.",
        article "an",
  has   concealed static;

Object  adamantine_knight "adamantine knight"    
  with  name 'adamantine' 'statue' 'adamant' 'knight',
        life [;
            Ask, Answer: "A shame there were no adamantine ears, really.";
            Show, Give:
                if (noun == marble_rose) {
                    move marble_rose to adamantine_knight;
                    "The knight is exceedingly pleased, and takes the flower.";
                }
                if (noun == silver_keepsake) {

                    if (marble_rose notin adamantine_knight) 
                        "The knight looks sadly at the picture.";

                    if (location ~= East_Side_Chapel) 
                        "The knight looks at the picture sadly, unable to see its immediate relevance.";

                    move marble_rose to statue_of_Diana;
                    give adamantine_knight general;
                    statue_of_Diana.initial = "Diana's tall marble statue bathes in the moonlight: and a flower is 
                        placed gaily in her hair.";
                    Achieved(SCORE_KNIGHT_ENCOURAGE);
                    remove silver_keepsake;
                    "The knight takes the keepsake, and studies it. Catching on, he places the marble flower in 
                     Diana's hair, high up beyond your reach. Afterward, he bows to you gravely. But there is a
                     little sadness in his eye as he turns away from her.";
                }
                "The knight has forsworn earthly things in the service of Diana.";
            Attack: "He is adamant.";
        ],
        orders [ o;
            Jump, Dance, Sing:
                "The knight dances a jig with sheer exuberance.";
            Open, Pull, Take:
                if( noun == Moonstone && Moonstone hasnt open ) {
                    if( adamantine_knight hasnt general ) 
                        "The knight understands what is to be done. But he is world-weary and sad, and not yet in 
                         your service.";
                    give Moonstone open;
                    "The knight bows, and pulls the enormously heavy Moonstone open. He plainly expected it to be 
                     effortless, but by the time he's finished you can almost see ghostly perspiration bead on
                     the ghostly sinews around his adamantine body.";
                }
                "The knight is confused. Perhaps you were a little rough with the skull.";
            Go:
                "The knight just about understands that he is to go somewhere, but cannot quite comprehend the 
                 direction. You'll have to indicate it somehow. (Shame there were no adamantine ears, really.)";
            PointVague:
                if( location == Parish_Church_Room && noun == d_obj ) {
                    if( Moonstone hasnt open ) {
                        "The knight is unable to walk straight through the Moonstone.";
                    }
                    remove adamantine_knight;
                    move rod_of_life to Parish_Church_Room;
                    move rod_of_death to Parish_Church_Room;
                    move rod_of_love to Parish_Church_Room;
                    move Moonstone to Parish_Church_Room;
                    "The knight strides down into the underworld beneath the Moonstone, to be lost to your sight... 
                     forever?^^For even he has not life force enough to hold together in the mists: his skeleton
                     begins to clatter away to nothing, falling in all directions, his heart, hand and skull returning
                     Somehow to your feet. And they are altering, altering even as you look down into the void...";
                }
                o = nothing;
                if( location == Parish_Church_Room ) {
                    if( noun == s_obj ) {
                        o = Stone_Cross;
                    }
                    if( noun == e_obj ) {
                        o = East_Side_Chapel;
                    }
                    if( noun == w_obj ) {
                        o = West_Side_Chapel;
                    }
                    if( noun == u_obj ) 
                        "Somewhat comically, the knight is too bulky to squeeze into the staircase. After a moment or 
                         two of watching an immovable object fighting it out with an irresistable force, you point
                         back, and the knight returns, chastened.";
                }
                if( location == East_Side_Chapel && noun == w_obj ) {
                    o = Parish_Church_Room;
                }
                if( location == West_Side_Chapel && noun == e_obj ) {
                    o = Parish_Church_Room;
                }
                if( o == nothing ) {
                    "The knight shakes his head, solemnly.";
                }
                if( o == Stone_Cross ) {
                    "The knight won't leave sacred ground.";
                }
                move adamantine_knight to o;
                if( o == East_Side_Chapel ) {
                    adamantine_knight.initial = "The knight stands here, bowing toward Diana.";
                    move statue_of_Diana to o;
                } else if( marble_rose in adamantine_knight ) {
                    adamantine_knight.initial = "The knight stands clasping the flower.";
                } else {
                    adamantine_knight.initial = "The knight stands staunchly here.";
                }
                print "The knight strides boldly away to the ";
                if( noun == n_obj ) {
                    "north.";
                }
                if( noun == s_obj ) {
                    "south.";
                }
                if( noun == e_obj ) {
                    "east.";
                }
                "west.";
            Give, Insert:
                if( second == statue_of_Diana && noun == marble_rose ) 
                    "The knight likes the idea but is confused.";
                "The knight is confused. Perhaps you were a little rough with the skull.";
            default: 
                "The knight is confused. Perhaps you were a little rough with the skull.";
        ],
        initial "The adamantine knight stands staunchly here.",
        description [  ;
            print "The knight is bursting and eager with life, as though nothing could fade his boundless energy for 
                existence. ";
            if( marble_rose in self ) 
                print "He is holding the marble flower. ";
            if( statue_of_Diana in location && marble_rose notin statue_of_Diana ) 
                "He gazes sadly at Diana, wanting only to be of chivalrous service.";
            new_line;
            rtrue;
        ],
        article "the",
  has   animate;

Object  East_Side_Chapel "East Side Chapel"      
  with  name 'stained' 'glass' 'windows' 'nativity',
        w_to Parish_Church_Room,
        description "A small clear space to the side of the church, in a bay ringed with stained glass windows of the Nativity.",
        cant_go "The church lies west.",
        section T_NE_OF_HOME,
  has   light;

Object  -> statue_of_Diana "statue of Diana"     
  with  name 'marble' 'statue' 'of' 'diana',
        before [;
            PointAt:
                if( adamantine_knight in location ) {
                    if( marble_rose in self )
                        "The knight has done all he can for Diana, and is now in your service.";
                    "The knight is unable to think how he can serve Diana.";
                }
                rfalse;
        ],
        initial "A tall marble statue of Diana stands here: a find from the nearby Roman remains.",
        description "There is a sly look in her eye as she smiles aslant.",
  has   static;

Object  Bell_Tower "Bell Tower"  
  with  name 'clerestory' 'plaque',
        u_to "The ropes are too smooth and noisy to climb.",
        d_to Parish_Church_Room,
        description "The bell-ringing chamber, half-way up the church tower. Thick braided ropes hang down, tailing into sashes. A plaque on one wall announces that in 1901, ten men (Roger Meldrew among them) rang a Kent Triple Bob.",
        section T_NE_OF_HOME,
  has   light;

Object  -> bell_ropes "bell ropes"       
  with  name 'bell' 'bells' 'rope' 'ropes' 'braided' 'sash' 'sashes',
        before [;
            Pull, Push, Blow: "You ring an amateurish, jangling peal.";
        ],
        article "eight",
  has   scenery;

Object  Out_on_the_Spire "Out on the Spire"      
  with  name 'village' 'clerestory' 'hills' 'farmlands' 'weather' 'vane' 'weathervane',
        d_to [;
            print "You slither down a bell rope, noisily...^";
            return Bell_Tower;
        ],
        description "There is a beautiful view over the green parceled farmlands and hills surrounding the village, 
            and you feel a certain pride to see Meldrew Hall sitting amongst it. It's also windy and dangerous up
            here on the grey lead spire of the parish church, beside the old clock: fortunately an opening leads
            down into the clerestory.",
        section T_NE_OF_HOME,
  has   light;

Object  -> adamantine_hand "adamantine hand"     
  with  name 'adamantine' 'hand' 'adamant',
        initial "Mounted loosely on the end of the weathervane, an adamantine hand points the way the wind blows.",
        description "Like a solid glove.^^It reminds you oddly of one of the symbolic pieces in Monopoly - the ship, the car and so on.",
        article "an",
        angel_hint "There must be more to this marvellous figure somewhere.",
  has   ;

Object  -> old_village_clock "old village clock" 
  with  name 'clock' 'old' 'plaque' 'commemorative',
        description "The clock stands at ten past three, as it has done for some years. According to a small commemorative plaque, it was the work of William Snelson the Clockmaker (1776-1848).",
        article "William Snelson's",
  has   scenery;

